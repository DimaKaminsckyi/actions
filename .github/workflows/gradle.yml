# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew bootJar                

      - name: Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest

      - name: Unit Tests
        run: ./gradlew test

      - name: Copy Jar file
        run: mv build/libs/$(ls build/libs) Learn-GitHub-Actions-0.0.1-SNAPSHOT.jar

      - uses: actions/upload-artifact@master
        with:
          name: jar-file
          path: Learn-GitHub-Actions-0.0.1-SNAPSHOT.jar

  build-image:

    runs-on: ubuntu-latest
    needs: build

    steps:

      - uses: actions/checkout@v3

      - uses: actions/download-artifact@master
        with:
          name: jar-file
          path: Learn-GitHub-Actions-0.0.1-SNAPSHOT.jar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Get current version or set default
        id: get-version
        run: echo "VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo '1.0.0')" >> $GITHUB_ENV

      - name: Increment version
        run: echo "VERSION=$(echo ${{ env.VERSION }} | awk -F. '{$NF+=1}1' OFS=. | tr -d '[:space:]')" >> $GITHUB_ENV


      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            dkamjo/learn-actions:latest
            dkamjo/learn-actions:${{ env.VERSION }}
